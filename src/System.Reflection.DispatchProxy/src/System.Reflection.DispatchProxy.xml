<?xml version="1.0"?>
<doc>
    <assembly>
        <name>System.Reflection.DispatchProxy</name>
    </assembly>
    <members>
        <member name="T:System.Reflection.DispatchProxy">
            <summary>
            DispatchProxy provides a mechanism for the instantiation of proxy objects and handling of
            their method dispatch.
            </summary>
        </member>
        <member name="M:System.Reflection.DispatchProxy.Invoke(System.Reflection.MethodInfo,System.Object[])">
            <summary>
            Whenever any method on the generated proxy type is called, this method
            will be invoked to dispatch control.
            </summary>
            <param name="targetMethod">The method the caller invoked</param>
            <param name="args">The arguments the caller passed to the method</param>
            <returns>The object to return to the caller, or <c>null</c> for void methods</returns>
        </member>
        <member name="M:System.Reflection.DispatchProxy.Create``2">
            <summary>
            Creates an object instance that derives from class <typeparamref name="TProxy"/>
            and implements interface <typeparamref name="T"/>.
            </summary>
            <typeparam name="T">The interface the proxy should implement.</typeparam>
            <typeparam name="TProxy">The base class to use for the proxy class.</typeparam>
            <returns>An object instance that implements <typeparamref name="T"/>.</returns>
            <exception cref="T:System.ArgumentException"><typeparamref name="T"/> is a class,
            or <typeparamref name="TProxy"/> is sealed or does not have a parameterless constructor</exception>
        </member>
        <member name="P:System.SR.BaseType_Cannot_Be_Sealed">
            <summary>The base type '{0}' cannot be sealed.</summary>
        </member>
        <member name="P:System.SR.BaseType_Must_Have_Default_Ctor">
            <summary>The base type '{0}' must have a public parameterless constructor.</summary>
        </member>
        <member name="P:System.SR.InterfaceType_Must_Be_Interface">
            <summary>The type '{0}' must be an interface, not a class.</summary>
        </member>
        <member name="P:System.SR.BaseType_Cannot_Be_Abstract">
            <summary>The base type '{0}' cannot be abstract.</summary>
        </member>
        <member name="P:System.SR.PlatformNotSupported_ReflectionDispatchProxy">
            <summary>This operation is not supported on .NET Standard as Reflection.Emit is not available.</summary>
        </member>
    </members>
</doc>
